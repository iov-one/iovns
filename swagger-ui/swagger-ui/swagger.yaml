openapi: 3.0.0
info:
  version: "3.0"
  title: IOVNS Lite
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Tendermint RPC
    description: Tendermint APIs, such as query blocks, transactions and validatorset
  - name: Domain
    description: Domain name related functionalities
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Staking
    description: Stake module APIs
  - name: Governance
    description: Governance module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Fee distribution module APIs
  - name: Supply
    description: Supply module APIs
  - name: version
  - name: Mint
    description: Minting module APIs
  - name: Misc
    description: Query app version
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - IOVNS REST
      responses:
        "200":
          description: Node status
          content:
            application/json:
              schema:
                type: object
                properties:
                  application_version:
                    properties:
                      build_tags:
                        type: string
                      client_name:
                        type: string
                      commit:
                        type: string
                      go:
                        type: string
                      name:
                        type: string
                      server_name:
                        type: string
                      version:
                        type: string
                  node_info:
                    properties:
                      id:
                        type: string
                      moniker:
                        type: string
                        example: validator-name
                      protocol_version:
                        properties:
                          p2p:
                            type: string
                            example: 7
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                      network:
                        type: string
                        example: iovns-2
                      channels:
                        type: string
                      listen_addr:
                        type: string
                        example: 192.168.56.1:46656
                      version:
                        description: Tendermint version
                        type: string
                        example: 0.15.0
                      other:
                        description: more information on versions
                        type: object
                        properties:
                          tx_index:
                            type: string
                            example: on
                          rpc_address:
                            type: string
                            example: tcp://0.0.0.0:46657
        "500":
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      responses:
        "200":
          description: Node syncing status
          content:
            application/json:
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
        "500":
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      responses:
        "200":
          description: The latest block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockQuery"
        "500":
          description: Server internal error
  "/blocks/{height}":
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          example: 1
          schema:
            type: number
      responses:
        "200":
          description: The block at a specific height
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockQuery"
        "400":
          description: Invalid height
        "404":
          description: Request block height doesn't
        "500":
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint RPC
      responses:
        "200":
          description: The validator set at the latest block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                  validators:
                    type: array
                    items:
                      $ref: "#/components/schemas/TendermintValidator"
        "500":
          description: Server internal error
  "/validatorsets/{height}":
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint RPC
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          example: 1
          schema:
            type: number
      responses:
        "200":
          description: The validator set at a specific block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                  validators:
                    type: array
                    items:
                      $ref: "#/components/schemas/TendermintValidator"
        "400":
          description: Invalid height
        "404":
          description: Block at height not available
        "500":
          description: Server internal error
  "/txs/{hash}":
    get:
      summary: Get a Tx by hash
      tags:
        - Transactions
      description: Retrieve a transaction using its hash.
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
          schema:
            type: string
      responses:
        "200":
          description: Tx with the provided hash
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TxQuery"
        "500":
          description: Internal Server Error
  /txs:
    get:
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      parameters:
        - in: query
          name: message.action
          description: "transaction events such as 'message.action=send' which results in
            the following endpoint: 'GET /txs?message.action=send'. note that
            each module documents its own events. look for xx_events.md in the
            corresponding cosmos-sdk/swagger-ui/spec directory"
          example: send
          schema:
            type: string
        - in: query
          name: message.sender
          description: "transaction tags with sender: 'GET
            /txs?message.action=send&message.sender=star16xyempempp92x9hyzz9wrg\
            f94r6j9h5f06pxxv'"
          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
          schema:
            type: string
        - in: query
          name: page
          description: Page number
          example: 1
          schema:
            type: integer
        - in: query
          name: limit
          description: Maximum number of items per page
          example: 1
          schema:
            type: integer
        - in: query
          name: tx.minheight
          description: transactions on blocks with height greater or equal this value
          example: 25
          schema:
            type: integer
        - in: query
          name: tx.maxheight
          description: transactions on blocks with height less than or equal this value
          example: 800000
          schema:
            type: integer
      responses:
        "200":
          description: All txs matching the provided events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedQueryTxs"
        "400":
          description: Invalid search events
        "500":
          description: Internal Server Error
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  $ref: "#/components/schemas/StdTx"
                mode:
                  type: string
                  example: block
        description: The tx must be a signed StdTx. The supported broadcast modes include
          `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and
          `"async"`(return right away).
        required: true
      responses:
        "200":
          description: Tx broadcasting result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "500":
          description: Internal Server Error
  /txs/encode:
    post:
      tags:
        - Transactions
      summary: Encode a transaction to the Amino wire format
      description: Encode a transaction (signed or not) from JSON to base64-encoded Amino
        serialized bytes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  $ref: "#/components/schemas/StdTx"
        description: The tx to encode
        required: true
      responses:
        "200":
          description: The tx was successfully decoded and re-encoded
          content:
            application/json:
              schema:
                type: object
                properties:
                  tx:
                    type: string
                    example: The base64-encoded Amino-serialized bytes for the tx
        "400":
          description: The tx was malformated
        "500":
          description: Server internal error
  /txs/decode:
    post:
      tags:
        - Transactions
      summary: Decode a transaction from the Amino wire format
      description: Decode a transaction (signed or not) from base64-encoded Amino
        serialized bytes to JSON
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  type: string
                  example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
        description: The tx to decode
        required: true
      responses:
        "200":
          description: The tx was successfully decoded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StdTx"
        "400":
          description: The tx was malformated
        "500":
          description: Server internal error
  "/bank/balances/{address}":
    get:
      summary: Get the account balances
      tags:
        - Bank
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
          schema:
            type: string
      responses:
        "200":
          description: Account balances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Coin"
        "500":
          description: Server internal error
  "/bank/accounts/{address}/transfers":
    post:
      summary: Send coins from one account to another
      tags:
        - Bank
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                amount:
                  type: array
                  items:
                    $ref: "#/components/schemas/Coin"
        description: The sender and tx information
        required: true
      responses:
        "202":
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StdTx"
        "400":
          description: Invalid request
        "500":
          description: Server internal error
  "/auth/accounts/{address}":
    get:
      summary: Get the account information on blockchain
      tags:
        - Auth
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
          schema:
            type: string
      responses:
        "200":
          description: Account information on the blockchain
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: object
                    properties:
                      account_number:
                        type: string
                      address:
                        type: string
                      coins:
                        type: array
                        items:
                          $ref: "#/components/schemas/Coin"
                      public_key:
                        $ref: "#/components/schemas/PublicKey"
                      sequence:
                        type: string
        "500":
          description: Server internel error
  "/staking/delegators/{delegatorAddr}/delegations":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
    get:
      summary: Get all delegations from a delegator
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Delegation"
        "400":
          description: Invalid delegator address
        "500":
          description: Internal Server Error
    post:
      summary: Submit delegation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                delegator_address:
                  $ref: "#/components/schemas/Address"
                validator_address:
                  $ref: "#/components/schemas/ValidatorAddress"
                delegation:
                  $ref: "#/components/schemas/Coin"
        description: The password of the account to remove from the KMS
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid delegator address or delegation request body
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  "/staking/delegators/{delegatorAddr}/delegations/{validatorAddr}":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delegation"
        "400":
          description: Invalid delegator address or validator address
        "500":
          description: Internal Server Error
  "/staking/delegators/{delegatorAddr}/unbonding_delegations":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UnbondingDelegation"
        "400":
          description: Invalid delegator address
        "500":
          description: Internal Server Error
    post:
      summary: Submit an unbonding delegation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                delegator_address:
                  $ref: "#/components/schemas/Address"
                validator_address:
                  $ref: "#/components/schemas/ValidatorAddress"
                shares:
                  type: string
                  example: "100"
        description: The password of the account to remove from the KMS
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid delegator address or unbonding delegation request body
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  "/staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnbondingDelegationPair"
        "400":
          description: Invalid delegator address or validator address
        "500":
          description: Internal Server Error
  /staking/redelegations:
    parameters:
      - in: query
        name: delegator
        description: Bech32 AccAddress of Delegator
        required: false
        schema:
          type: string
      - in: query
        name: validator_from
        description: Bech32 ValAddress of SrcValidator
        required: false
        schema:
          type: string
      - in: query
        name: validator_to
        description: Bech32 ValAddress of DstValidator
        required: false
        schema:
          type: string
    get:
      summary: Get all redelegations (filter by query params)
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Redelegation"
        "500":
          description: Internal Server Error
  "/staking/delegators/{delegatorAddr}/redelegations":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
    post:
      summary: Submit a redelegation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                delegator_address:
                  $ref: "#/components/schemas/Address"
                validator_src_addressess:
                  $ref: "#/components/schemas/ValidatorAddress"
                validator_dst_address:
                  $ref: "#/components/schemas/ValidatorAddress"
                shares:
                  type: string
                  example: "100"
        description: The sender and tx information
      tags:
        - Staking
      responses:
        "200":
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StdTx"
        "400":
          description: Invalid delegator address or redelegation request body
        "500":
          description: Internal Server Error
  "/staking/delegators/{delegatorAddr}/validators":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Validator"
        "400":
          description: Invalid delegator address
        "500":
          description: Internal Server Error
  "/staking/delegators/{delegatorAddr}/validators/{validatorAddr}":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validator"
        "400":
          description: Invalid delegator address or validator address
        "500":
          description: Internal Server Error
  /staking/validators:
    get:
      summary: Get all validator candidates. By default it returns only the bonded
        validators.
      parameters:
        - in: query
          name: status
          description: The validator bond status. Must be either 'bonded', 'unbonded', or
            'unbonding'.
          example: bonded
          schema:
            type: string
        - in: query
          name: page
          description: The page number.
          example: 1
          schema:
            type: integer
        - in: query
          name: limit
          description: The maximum number of items per page.
          example: 1
          schema:
            type: integer
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Validator"
        "500":
          description: Internal Server Error
  "/staking/validators/{validatorAddr}":
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Query the information from a single validator
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validator"
        "400":
          description: Invalid validator address
        "500":
          description: Internal Server Error
  "/staking/validators/{validatorAddr}/delegations":
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Get all delegations from a validator
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Delegation"
        "400":
          description: Invalid validator address
        "500":
          description: Internal Server Error
  "/staking/validators/{validatorAddr}/unbonding_delegations":
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Get all unbonding delegations from a validator
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UnbondingDelegation"
        "400":
          description: Invalid validator address
        "500":
          description: Internal Server Error
  /staking/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  loose_tokens:
                    type: string
                  bonded_tokens:
                    type: string
                  inflation_last_time:
                    type: string
                  inflation:
                    type: string
                  date_last_commission_reset:
                    type: string
                  prev_bonded_shares:
                    type: string
        "500":
          description: Internal Server Error
  /staking/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
        - Staking
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inflation_rate_change:
                    type: string
                  inflation_max:
                    type: string
                  inflation_min:
                    type: string
                  goal_bonded:
                    type: string
                  unbonding_time:
                    type: string
                  max_validators:
                    type: integer
                  bond_denom:
                    type: string
        "500":
          description: Internal Server Error
  /slashing/signing_infos:
    get:
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      tags:
        - Slashing
      parameters:
        - in: query
          name: page
          description: Page number
          required: true
          example: 1
          schema:
            type: integer
        - in: query
          name: limit
          description: Maximum number of items per page
          required: true
          example: 5
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SigningInfo"
        "400":
          description: Invalid validator public key for one of the validators
        "500":
          description: Internal Server Error
  "/slashing/validators/{validatorAddr}/unjail":
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      tags:
        - Slashing
      parameters:
        - description: Bech32 validator address
          name: validatorAddr
          required: true
          in: path
          example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/StdTx"
        required: true
      responses:
        "200":
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid validator address or base_req
        "500":
          description: Internal Server Error
  /slashing/parameters:
    get:
      summary: Get the current slashing parameters
      tags:
        - Slashing
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  max_evidence_age:
                    type: string
                  signed_blocks_window:
                    type: string
                  min_signed_per_window:
                    type: string
                  double_sign_unbond_duration:
                    type: string
                  downtime_unbond_duration:
                    type: string
                  slash_fraction_double_sign:
                    type: string
                  slash_fraction_downtime:
                    type: string
        "500":
          description: Internal Server Error
  /gov/proposals:
    post:
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      tags:
        - Governance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                title:
                  type: string
                description:
                  type: string
                proposal_type:
                  type: string
                  example: text
                proposer:
                  $ref: "#/components/schemas/Address"
                initial_deposit:
                  type: array
                  items:
                    $ref: "#/components/schemas/Coin"
        description: valid value of `"proposal_type"` can be `"text"`,
          `"parameter_change"`, `"software_upgrade"`
        required: true
      responses:
        "200":
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StdTx"
        "400":
          description: Invalid proposal body
        "500":
          description: Internal Server Error
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      tags:
        - Governance
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          schema:
            type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: proposal status, valid values can be `"deposit_period"`,
            `"voting_period"`, `"passed"`, `"rejected"`
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TextProposal"
        "400":
          description: Invalid query parameters
        "500":
          description: Internal Server Error
  /gov/proposals/param_change:
    post:
      summary: Generate a parameter change proposal transaction
      description: Generate a parameter change proposal transaction
      tags:
        - Governance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                title:
                  type: string
                  x-example: Param Change
                description:
                  type: string
                  x-example: Update max validators
                proposer:
                  $ref: "#/components/schemas/Address"
                deposit:
                  type: array
                  items:
                    $ref: "#/components/schemas/Coin"
                changes:
                  type: array
                  items:
                    $ref: "#/components/schemas/ParamChange"
        description: The parameter change proposal body that contains all parameter changes
        required: true
      responses:
        "200":
          description: The transaction was succesfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StdTx"
        "400":
          description: Invalid proposal body
        "500":
          description: Internal Server Error
  "/gov/proposals/{proposalId}":
    get:
      summary: Query a proposal
      description: Query a proposal by id
      tags:
        - Governance
      parameters:
        - name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextProposal"
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
  "/gov/proposals/{proposalId}/proposer":
    get:
      summary: Query proposer
      description: Query for the proposer for a proposal
      tags:
        - Governance
      parameters:
        - name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proposer"
        "400":
          description: Invalid proposal ID
        "500":
          description: Internal Server Error
  "/gov/proposals/{proposalId}/deposits":
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      tags:
        - Governance
      parameters:
        - name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Deposit"
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
    post:
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      tags:
        - Governance
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                depositor:
                  $ref: "#/components/schemas/Address"
                amount:
                  type: array
                  items:
                    $ref: "#/components/schemas/Coin"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid proposal id or deposit body
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  "/gov/proposals/{proposalId}/deposits/{depositor}":
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      tags:
        - Governance
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
        - description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deposit"
        "400":
          description: Invalid proposal id or depositor address
        "404":
          description: Found no deposit
        "500":
          description: Internal Server Error
  "/gov/proposals/{proposalId}/votes":
    get:
      summary: Query voters
      description: Query voters information by proposalId
      tags:
        - Governance
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vote"
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
    post:
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      tags:
        - Governance
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                voter:
                  $ref: "#/components/schemas/Address"
                option:
                  type: string
                  example: yes
        description: valid value of `"option"` field can be `"yes"`, `"no"`,
          `"no_with_veto"` and `"abstain"`
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid proposal id or vote body
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  "/gov/proposals/{proposalId}/votes/{voter}":
    get:
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      tags:
        - Governance
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
        - description: Bech32 voter address
          name: voter
          required: true
          in: path
          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vote"
        "400":
          description: Invalid proposal id or voter address
        "404":
          description: Found no vote
        "500":
          description: Internal Server Error
  "/gov/proposals/{proposalId}/tally":
    get:
      summary: Get a proposal's tally result at the current time
      description: Gets a proposal's tally result at the current time. If the proposal is
        pending deposits (i.e status 'DepositPeriod') it returns an empty tally
        result.
      tags:
        - Governance
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          example: "2"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TallyResult"
        "400":
          description: Invalid proposal id
        "500":
          description: Internal Server Error
  /gov/parameters/deposit:
    get:
      summary: Query governance deposit parameters
      description: Query governance deposit parameters. The max_deposit_period units are in
        nanoseconds.
      tags:
        - Governance
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  min_deposit:
                    type: array
                    items:
                      $ref: "#/components/schemas/Coin"
                  max_deposit_period:
                    type: string
                    example: "86400000000000"
        "400":
          description:  is not a valid query request path
        "404":
          description: Found no deposit parameters
        "500":
          description: Internal Server Error
  /gov/parameters/tallying:
    get:
      summary: Query governance tally parameters
      description: Query governance tally parameters
      tags:
        - Governance
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  threshold:
                    type: string
                    example: "0.5000000000"
                  veto:
                    type: string
                    example: "0.3340000000"
                  governance_penalty:
                    type: string
                    example: "0.0100000000"
        "400":
          description:  is not a valid query request path
        "404":
          description: Found no tally parameters
        "500":
          description: Internal Server Error
  /gov/parameters/voting:
    get:
      summary: Query governance voting parameters
      description: Query governance voting parameters. The voting_period units are in
        nanoseconds.
      tags:
        - Governance
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  voting_period:
                    type: string
                    example: "86400000000000"
        "400":
          description:  is not a valid query request path
        "404":
          description: Found no voting parameters
        "500":
          description: Internal Server Error
  "/distribution/delegators/{delegatorAddr}/rewards":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star167w96tdvmazakdwkw2u57227eduula2cy572lf
        schema:
          type: string
    get:
      summary: Get the total rewards balance from all delegations
      description: Get the sum of all the rewards earned by delegations by a single
        delegator
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DelegatorTotalRewards"
        "400":
          description: Invalid delegator address
        "500":
          description: Internal Server Error
    post:
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      tags:
        - Distribution
      requestBody:
        $ref: "#/components/requestBodies/WithdrawRequestBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid delegator address
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  "/distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Coin"
        "400":
          description: Invalid delegator address
        "500":
          description: Internal Server Error
    post:
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      tags:
        - Distribution
      requestBody:
        $ref: "#/components/requestBodies/WithdrawRequestBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid delegator address or delegation body
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  "/distribution/delegators/{delegatorAddr}/withdraw_address":
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        example: star167w96tdvmazakdwkw2u57227eduula2cy572lf
        schema:
          type: string
    get:
      summary: Get the rewards withdrawal address
      description: Get the delegations' rewards withdrawal address. This is the address in
        which the user will receive the reward funds
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"
        "400":
          description: Invalid delegator address
        "500":
          description: Internal Server Error
    post:
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      tags:
        - Distribution
      requestBody:
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                withdraw_address:
                  $ref: "#/components/schemas/Address"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid delegator or withdraw address
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  "/distribution/validators/{validatorAddr}":
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidatorDistInfo"
        "400":
          description: Invalid validator address
        "500":
          description: Internal Server Error
  "/distribution/validators/{validatorAddr}/outstanding_rewards":
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Fee distribution outstanding rewards of a single validator
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Coin"
        "500":
          description: Internal Server Error
  "/distribution/validators/{validatorAddr}/rewards":
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        schema:
          type: string
    get:
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Coin"
        "400":
          description: Invalid validator address
        "500":
          description: Internal Server Error
    post:
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      tags:
        - Distribution
      requestBody:
        $ref: "#/components/requestBodies/WithdrawRequestBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BroadcastTxCommitResult"
        "400":
          description: Invalid validator address
        "401":
          description: Key password is wrong
        "500":
          description: Internal Server Error
  /distribution/community_pool:
    get:
      summary: Community pool parameters
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Coin"
        "500":
          description: Internal Server Error
  /distribution/parameters:
    get:
      summary: Fee distribution parameters
      tags:
        - Distribution
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  base_proposer_reward:
                    type: string
                  bonus_proposer_reward:
                    type: string
                  community_tax:
                    type: string
        "500":
          description: Internal Server Error
  /minting/parameters:
    get:
      summary: Minting module parameters
      tags:
        - Mint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  mint_denom:
                    type: string
                  inflation_rate_change:
                    type: string
                  inflation_max:
                    type: string
                  inflation_min:
                    type: string
                  goal_bonded:
                    type: string
                  blocks_per_year:
                    type: string
        "500":
          description: Internal Server Error
  /minting/inflation:
    get:
      summary: Current minting inflation value
      tags:
        - Mint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
  /minting/annual-provisions:
    get:
      summary: Current minting annual provisions value
      tags:
        - Mint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
  /supply/total:
    get:
      summary: Total supply of coins in the chain
      tags:
        - Supply
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supply"
        "500":
          description: Internal Server Error
  "/supply/total/{denomination}":
    parameters:
      - in: path
        name: denomination
        description: Coin denomination
        required: true
        example: uatom
        schema:
          type: string
    get:
      summary: Total supply of a single coin denomination
      tags:
        - Supply
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid coin denomination
        "500":
          description: Internal Server Error
  "/domain/query/resolveDomain":
    post:
      summary: Resolve a domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/ResolveDomainQueryBody"
        description: Resolve domain query
      tags:
        - Domain
      responses:
        "200":
          description: Domain resolved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
        "400":
          description: Domain not found
        "500":
          description: Internal Server Error
  "/domain/query/accountsInDomain":
    post:
      summary: Returns all the accounts registered under a domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/ResolveAccountsInDomainQueryBody"
        description: Resolve accouts in domain query
      tags:
        - Domain
      responses:
        "200":
          description: Accounts resolved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfAccounts"
        "400":
          description: Accounts or domain not found
        "500":
          description: Internal Server Error
  "/domain/query/accountsFromOwner":
    post:
      summary: Returns all the accounts owned by a given address
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/ResolveAccountsFromOwnerQueryBody"
        description: Resolve accounts owned by an address
      tags:
        - Domain
      responses:
        "200":
          description: Accounts resolved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfAccounts"
        "400":
          description: Accounts, domain or owner not found
        "500":
          description: Internal Server Error
  "/domain/query/domainsFromOwner":
    post:
      summary: Returns all the domains owned by a given address
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/ResolveDomainsFromOwnerQueryBody"
        description: Resolve domains owned by an address
      tags:
        - Domain
      responses:
        "200":
          description: Domains resolved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfDomains"
        "400":
          description: domain or owner not found
        "500":
          description: Internal Server Error
  "/domain/query/resolveAccount":
    post:
      summary: Resolves an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/ResolveAccountQueryBody"
        description: Resolve an account
      tags:
        - Domain
      responses:
        "200":
          description: Account resolved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Account not found
        "500":
          description: Internal Server Error
components:
  requestBodies:
    WithdrawRequestBody:
      content:
        application/json:
          schema:
            properties:
              base_req:
                $ref: "#/components/schemas/BaseReq"
    ResolveDomainQueryBody:
      type: object
      properties:
        name:
          type: string
          example: Name
          description: Name of the domain
    ResolveAccountsInDomainQueryBody:
      type: object
      properties:
        domain:
          type: string
          example: bazooka
          description: Name of the domain
        results_per_page:
          type: number
          example: 5
          description: Results per page
        offset:
          type: number
          example: 1
          description: Page number
    ResolveAccountsFromOwnerQueryBody:
      type: object
      properties:
        owner:
          $ref: "#/components/schemas/Address"
          description: Owner address of the accounts
        results_per_page:
          type: number
          example: 5
          description: Results per page
        offset:
          type: number
          example: 1
          description: Page number
    ResolveDomainsFromOwnerQueryBody:
      type: object
      properties:
        owner:
          $ref: "#/components/schemas/Address"
          description: Owner address of the domains
        results_per_page:
          type: number
          example: 5
          description: Results per page
        offset:
          type: number
          example: 1
          description: Page number
    ResolveAccountQueryBody:
      type: object
      properties:
        domain:
          type: string
          description: Name of the domain
        name:
          type: string
          description: Account name
  securitySchemes:
    kms:
      type: http
      scheme: basic
  schemas:
    CheckTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/KVPair"
      example:
        code: 0
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ""
          - ""
    DeliverTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/KVPair"
      example:
        code: 5
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ""
          - ""
    BroadcastTxCommitResult:
      type: object
      properties:
        check_tx:
          $ref: "#/components/schemas/CheckTxResult"
        deliver_tx:
          $ref: "#/components/schemas/DeliverTxResult"
        hash:
          $ref: "#/components/schemas/Hash"
        height:
          type: integer
    KVPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Msg:
      type: string
    Address:
      type: string
      description: bech32 encoded address
      example: star1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
    ValidatorAddress:
      type: string
      description: bech32 encoded address
      example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    Coin:
      type: object
      properties:
        denom:
          type: string
          example: stake
        amount:
          type: string
          example: "50"
    Hash:
      type: string
      example: EE5F3404034C524501629B56E0DDC38FAD651F04
    TxQuery:
      type: object
      properties:
        hash:
          type: string
          example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
        height:
          type: number
          example: 368
        tx:
          $ref: "#/components/schemas/StdTx"
        result:
          type: object
          properties:
            log:
              type: string
            gas_wanted:
              type: string
              example: "200000"
            gas_used:
              type: string
              example: "26354"
            tags:
              type: array
              items:
                $ref: "#/components/schemas/KVPair"
    PaginatedQueryTxs:
      type: object
      properties:
        total_count:
          type: number
          example: 1
        count:
          type: number
          example: 1
        page_number:
          type: number
          example: 1
        page_total:
          type: number
          example: 1
        limit:
          type: number
          example: 30
        txs:
          type: array
          items:
            $ref: "#/components/schemas/TxQuery"
    StdTx:
      type: object
      properties:
        msg:
          type: array
          items:
            $ref: "#/components/schemas/Msg"
        fee:
          type: object
          properties:
            gas:
              type: string
            amount:
              type: array
              items:
                $ref: "#/components/schemas/Coin"
        memo:
          type: string
        signature:
          type: object
          properties:
            signature:
              type: string
              example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
            pub_key:
              type: object
              properties:
                type:
                  type: string
                  example: tendermint/PubKeySecp256k1
                value:
                  type: string
                  example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "0"
    BlockID:
      type: object
      properties:
        hash:
          $ref: "#/components/schemas/Hash"
        parts:
          type: object
          properties:
            total:
              type: number
              example: 0
            hash:
              $ref: "#/components/schemas/Hash"
    BlockHeader:
      type: object
      properties:
        chain_id:
          type: string
          example: iovns-galaxynet
        height:
          type: number
          example: 1
        time:
          type: string
          example: 2017-12-30T05:53:09.287+01:00
        num_txs:
          type: number
          example: 0
        last_block_id:
          $ref: "#/components/schemas/BlockID"
        total_txs:
          type: number
          example: 35
        last_commit_hash:
          $ref: "#/components/schemas/Hash"
        data_hash:
          $ref: "#/components/schemas/Hash"
        validators_hash:
          $ref: "#/components/schemas/Hash"
        next_validators_hash:
          $ref: "#/components/schemas/Hash"
        consensus_hash:
          $ref: "#/components/schemas/Hash"
        app_hash:
          $ref: "#/components/schemas/Hash"
        last_results_hash:
          $ref: "#/components/schemas/Hash"
        evidence_hash:
          $ref: "#/components/schemas/Hash"
        proposer_address:
          $ref: "#/components/schemas/Address"
        version:
          type: object
          properties:
            block:
              type: string
              example: 10
            app:
              type: string
              example: 0
    Block:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/BlockHeader"
        txs:
          type: array
          items:
            type: string
        evidence:
          type: array
          items:
            type: string
        last_commit:
          type: object
          properties:
            block_id:
              $ref: "#/components/schemas/BlockID"
            precommits:
              type: array
              items:
                type: object
                properties:
                  validator_address:
                    type: string
                  validator_index:
                    type: string
                    example: "0"
                  height:
                    type: string
                    example: "0"
                  round:
                    type: string
                    example: "0"
                  timestamp:
                    type: string
                    example: 2017-12-30T05:53:09.287+01:00
                  type:
                    type: number
                    example: 2
                  block_id:
                    $ref: "#/components/schemas/BlockID"
                  signature:
                    type: string
                    example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    BlockQuery:
      type: object
      properties:
        block_meta:
          type: object
          properties:
            header:
              $ref: "#/components/schemas/BlockHeader"
            block_id:
              $ref: "#/components/schemas/BlockID"
        block:
          $ref: "#/components/schemas/Block"
    DelegationDelegatorReward:
      type: object
      properties:
        validator_address:
          $ref: "#/components/schemas/ValidatorAddress"
        reward:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
    DelegatorTotalRewards:
      type: object
      properties:
        rewards:
          type: array
          items:
            $ref: "#/components/schemas/DelegationDelegatorReward"
        total:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
    BaseReq:
      type: object
      properties:
        from:
          type: string
          example: star1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
          description: Sender address or Keybase name to generate a transaction
        memo:
          type: string
          example: Sent via Cosmos Voyager 🚀
        chain_id:
          type: string
          example: iovns-galaxynet
        account_number:
          type: string
          example: "0"
        sequence:
          type: string
          example: "1"
        gas:
          type: string
          example: "200000"
        gas_adjustment:
          type: string
          example: "1.2"
        fees:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        simulate:
          type: boolean
          example: false
          description: Estimate gas for a transaction (cannot be used in conjunction with
            generate_only)
    TendermintValidator:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/ValidatorAddress"
        pub_key:
          type: string
          example: starvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        voting_power:
          type: string
          example: "1000"
        proposer_priority:
          type: string
          example: "1000"
    TextProposal:
      type: object
      properties:
        proposal_id:
          type: integer
        title:
          type: string
        description:
          type: string
        proposal_type:
          type: string
        proposal_status:
          type: string
        final_tally_result:
          $ref: "#/components/schemas/TallyResult"
        submit_time:
          type: string
        total_deposit:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        voting_start_time:
          type: string
    Proposer:
      type: object
      properties:
        proposal_id:
          type: string
        proposer:
          type: string
    Deposit:
      type: object
      properties:
        amount:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        proposal_id:
          type: string
        depositor:
          $ref: "#/components/schemas/Address"
    TallyResult:
      type: object
      properties:
        yes:
          type: string
          example: "0.0000000000"
        abstain:
          type: string
          example: "0.0000000000"
        no:
          type: string
          example: "0.0000000000"
        no_with_veto:
          type: string
          example: "0.0000000000"
    Vote:
      type: object
      properties:
        voter:
          type: string
        proposal_id:
          type: string
        option:
          type: string
    Validator:
      type: object
      properties:
        operator_address:
          $ref: "#/components/schemas/ValidatorAddress"
        consensus_pubkey:
          type: string
          example: starvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        jailed:
          type: boolean
        status:
          type: integer
        tokens:
          type: string
        delegator_shares:
          type: string
        description:
          type: object
          properties:
            moniker:
              type: string
            identity:
              type: string
            website:
              type: string
            security_contact:
              type: string
            details:
              type: string
        bond_height:
          type: string
          example: "0"
        bond_intra_tx_counter:
          type: integer
          example: 0
        unbonding_height:
          type: string
          example: "0"
        unbonding_time:
          type: string
          example: 1970-01-01T00:00:00Z
        commission:
          type: object
          properties:
            rate:
              type: string
              example: "0"
            max_rate:
              type: string
              example: "0"
            max_change_rate:
              type: string
              example: "0"
            update_time:
              type: string
              example: 1970-01-01T00:00:00Z
    Delegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        shares:
          type: string
        balance:
          $ref: "#/components/schemas/Coin"
    UnbondingDelegationPair:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        entries:
          type: array
          items:
            $ref: "#/components/schemas/UnbondingEntries"
    UnbondingEntries:
      type: object
      properties:
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: string
        min_time:
          type: string
    UnbondingDelegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: integer
        min_time:
          type: integer
    Redelegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_src_address:
          type: string
        validator_dst_address:
          type: string
        entries:
          type: array
          items:
            $ref: "#/components/schemas/Redelegation"
    RedelegationEntry:
      type: object
      properties:
        creation_height:
          type: integer
        completion_time:
          type: integer
        initial_balance:
          type: string
        balance:
          type: string
        shares_dst:
          type: string
    ValidatorDistInfo:
      type: object
      properties:
        operator_address:
          $ref: "#/components/schemas/ValidatorAddress"
        self_bond_rewards:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
        val_commission:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
    PublicKey:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    SigningInfo:
      type: object
      properties:
        start_height:
          type: string
        index_offset:
          type: string
        jailed_until:
          type: string
        missed_blocks_counter:
          type: string
    ParamChange:
      type: object
      properties:
        subspace:
          type: string
          example: staking
        key:
          type: string
          example: MaxValidators
        subkey:
          type: string
          example: ""
        value:
          type: object
    Supply:
      type: object
      properties:
        total:
          type: array
          items:
            $ref: "#/components/schemas/Coin"
    ConsensusState:
      type: object
      properties:
        chain_id:
          type: string
        height:
          type: integer
        root:
          $ref: "#/components/schemas/Root"
        next_validator_set:
          $ref: "#/components/schemas/ValidatorSet"
    Root:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            hash:
              type: string
    Prefix:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            key_prefix:
              type: string
    ValidatorSet:
      type: object
      properties:
        validators:
          type: array
          items:
            $ref: "#/components/schemas/TendermintValidator"
        proposer:
          $ref: "#/components/schemas/TendermintValidator"
    ClientState:
      type: object
      properties:
        id:
          type: string
        frozen:
          type: boolean
    Proof:
      type: object
      properties:
        proof:
          type: object
          properties:
            ops:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  key:
                    type: string
                  data:
                    type: string
    Commit:
      type: object
      properties:
        block_id:
          $ref: "#/components/schemas/BlockID"
        precommits:
          type: array
          items:
            type: object
            properties:
              validator_address:
                type: string
              validator_index:
                type: string
                example: "0"
              height:
                type: string
                example: "0"
              round:
                type: string
                example: "0"
              timestamp:
                type: string
                example: 2017-12-30T05:53:09.287+01:00
              type:
                type: number
                example: 2
              block_id:
                $ref: "#/components/schemas/BlockID"
              signature:
                type: string
                example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    SignedHeader:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/BlockHeader"
        commit:
          $ref: "#/components/schemas/Commit"
    Header:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            SignedHeader:
              $ref: "#/components/schemas/SignedHeader"
            validator_set:
              $ref: "#/components/schemas/ValidatorSet"
            next_validator_set:
              $ref: "#/components/schemas/ValidatorSet"
    ProofPath:
      type: object
      properties:
        key_path:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              enc:
                type: integer
    ClientConnectionsResponse:
      type: object
      properties:
        connection_paths:
          type: array
          items:
            type: string
        proof:
          $ref: "#/components/schemas/Proof"
        proof_path:
          $ref: "#/components/schemas/ProofPath"
        proof_height:
          type: integer
    DuplicateVoteEvidence:
      type: string
    Evidence:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            DuplicateVoteEvidence:
              $ref: "#/components/schemas/DuplicateVoteEvidence"
            chain_id:
              type: string
            val_power:
              type: integer
            total_power:
              type: integer
    Domain:
      type: object
      properties:
        name:
          type: string
          example: bazoooka
          description: Name of the domain
        admin:
          $ref: "#/components/schemas/Address"
          description: Owner of the domain
        validUntil:
          type: number
          description: Unix timestamp that defines for how long the domain is valid
        domainType:
          type: string
          example: close
          description: defines the type of the domain
        accountRenew:
          type: number
          description: The duration of each created or renewed account under the domain
        broker:
          $ref: "#/components/schemas/Address"
          description: Address of the broker
    ArrayOfDomains:
      type: object
      properties:
        accounts:
          type: array
          $ref: "#/components/schemas/Domain"
    Account:
      type: object
      properties:
        domain:
          type: string
          example: bazooka
          description: Name of the domain
        name:
          type: string
          example: launcher
          description: Name of the address
        owner:
          $ref: "#/components/schemas/Address"
          description: Owner of the address
        validUntil:
          type: number
          description: ValidUntil is a unix timestamp that defines for how long the domain is valid
        broker:
          $ref: "#/components/schemas/Address"
          description: Address of the broker
        targets:
          type: array
          $ref: "#/components/schemas/Target"
        certificates:
          type: array
          items:
            type: string
          description: Certificates
        metadataURI:
          type: string
          description: Link to extra information regarding the account
    ArrayOfAccounts:
      type: object
      properties:
        accounts:
          type: array
          $ref: "#/components/schemas/Account"
    Target:
      type: object
      properties:
        id:
          type: string
          example: cosmos-hub-1
          description: Blockchain ID
        address:
          type: array
          $ref: "#/components/schemas/Address"
          description: Blockchain address
